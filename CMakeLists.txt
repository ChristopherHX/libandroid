cmake_minimum_required(VERSION 3.13)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED 17)
enable_language(CXX)

project(mcpelauncher-linker)

add_definitions(-include android/versioning.h -include strlcpy.h)
include_directories(include)
include_directories(core/base/include)
include_directories(core/liblog/include)
include_directories(core/libcutils/include)
if(APPLE)
set(LINKER_SOURCES src/hooks_net_darwin.c src/hooks_darwin_pthread_once.cpp)
set(LINKER_LIBS epoll-shim)
else(UNIX)
set(LINKER_SOURCES bionic/libc/upstream-openbsd/lib/libc/string/strlcpy.c src/hooks_darwin_pthread_once.cpp)
set(LINKER_LIBS rt)
endif()
add_library(linker STATIC ${LINKER_SOURCES} bionic/linker/rt.cpp bionic/linker/linker_gdb_support.cpp src/cache.c src/ctype.c src/hooks_dirent.c src/hooks_io.c src/hooks_pthread.c src/hooks_net.c src/hooks_shm.c src/hooks.c src/logging.c src/properties.c src/sysconf.c bionic/libc/bionic/bionic_call_ifunc_resolver.cpp bionic/linker/linker_dlwarning.cpp bionic/linker/dlfcn.cpp bionic/linker/linker_phdr.cpp bionic/linker/linker_soinfo.cpp bionic/linker/linker.cpp bionic/linker/linker_config.cpp bionic/linker/linker_utils.cpp bionic/linker/linker_debug.cpp bionic/linker/linker_block_allocator.cpp bionic/linker/linker_mapped_file_fragment.cpp bionic/linker/linker_relocate.cpp bionic/linker/linker_namespaces.cpp core/base/mapped_file.cpp bionic/linker/linker_globals.cpp bionic/linker/linker_main.cpp bionic/linker/linker_cfi.cpp bionic/linker/linker_sdk_versions.cpp bionic/linker/linker_logger.cpp core/base/file.cpp core/base/logging.cpp core/base/liblog_symbols.cpp bionic/libc/async_safe/async_safe_log.cpp core/base/stringprintf.cpp core/base/strings.cpp core/liblog/logger_write.cpp core/liblog/properties.cpp core/base/threads.cpp core/base/properties.cpp core/base/parsebool.cpp core/libziparchive/zip_archive_stream_entry.cc core/libziparchive/zip_archive.cc)
target_compile_definitions(linker PRIVATE "__LIBC_HIDDEN__=" PAGE_SIZE=4096 PATH_MAX=256 "__unused=")
target_link_libraries(linker z pthread ${LINKER_LIBS})